package com.pda.pda_android.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.pda.pda_android.db.Entry.UserBean;
import com.pda.pda_android.db.Entry.CheckBean;
import com.pda.pda_android.db.Entry.SsxxUserInfoBean;
import com.pda.pda_android.db.Entry.UserCheckBean;
import com.pda.pda_android.db.Entry.SsxxBean;

import com.pda.pda_android.db.dao.UserBeanDao;
import com.pda.pda_android.db.dao.CheckBeanDao;
import com.pda.pda_android.db.dao.SsxxUserInfoBeanDao;
import com.pda.pda_android.db.dao.UserCheckBeanDao;
import com.pda.pda_android.db.dao.SsxxBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig checkBeanDaoConfig;
    private final DaoConfig ssxxUserInfoBeanDaoConfig;
    private final DaoConfig userCheckBeanDaoConfig;
    private final DaoConfig ssxxBeanDaoConfig;

    private final UserBeanDao userBeanDao;
    private final CheckBeanDao checkBeanDao;
    private final SsxxUserInfoBeanDao ssxxUserInfoBeanDao;
    private final UserCheckBeanDao userCheckBeanDao;
    private final SsxxBeanDao ssxxBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        checkBeanDaoConfig = daoConfigMap.get(CheckBeanDao.class).clone();
        checkBeanDaoConfig.initIdentityScope(type);

        ssxxUserInfoBeanDaoConfig = daoConfigMap.get(SsxxUserInfoBeanDao.class).clone();
        ssxxUserInfoBeanDaoConfig.initIdentityScope(type);

        userCheckBeanDaoConfig = daoConfigMap.get(UserCheckBeanDao.class).clone();
        userCheckBeanDaoConfig.initIdentityScope(type);

        ssxxBeanDaoConfig = daoConfigMap.get(SsxxBeanDao.class).clone();
        ssxxBeanDaoConfig.initIdentityScope(type);

        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        checkBeanDao = new CheckBeanDao(checkBeanDaoConfig, this);
        ssxxUserInfoBeanDao = new SsxxUserInfoBeanDao(ssxxUserInfoBeanDaoConfig, this);
        userCheckBeanDao = new UserCheckBeanDao(userCheckBeanDaoConfig, this);
        ssxxBeanDao = new SsxxBeanDao(ssxxBeanDaoConfig, this);

        registerDao(UserBean.class, userBeanDao);
        registerDao(CheckBean.class, checkBeanDao);
        registerDao(SsxxUserInfoBean.class, ssxxUserInfoBeanDao);
        registerDao(UserCheckBean.class, userCheckBeanDao);
        registerDao(SsxxBean.class, ssxxBeanDao);
    }
    
    public void clear() {
        userBeanDaoConfig.clearIdentityScope();
        checkBeanDaoConfig.clearIdentityScope();
        ssxxUserInfoBeanDaoConfig.clearIdentityScope();
        userCheckBeanDaoConfig.clearIdentityScope();
        ssxxBeanDaoConfig.clearIdentityScope();
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public CheckBeanDao getCheckBeanDao() {
        return checkBeanDao;
    }

    public SsxxUserInfoBeanDao getSsxxUserInfoBeanDao() {
        return ssxxUserInfoBeanDao;
    }

    public UserCheckBeanDao getUserCheckBeanDao() {
        return userCheckBeanDao;
    }

    public SsxxBeanDao getSsxxBeanDao() {
        return ssxxBeanDao;
    }

}
